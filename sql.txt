use master;
IF NOT EXISTS(SELECT * FROM sysdatabases WHERE (name = 'MUNDOPOKE_1')) 
    
    CREATE DATABASE MUNDOPOKE_1 ;

    ELSE
    drop DATABASE MUNDOPOKE_1 
    CREATE database MUNDOPOKE_1
go
USE MUNDOPOKE_1;
GO
--CREACION DE LAS TABLAS
    IF OBJECT_ID ('ENTRENADORPOKEMON','U') 
        IS NULL CREATE TABLE ENTRENADORPOKEMON(
        CLAVE INT IDENTITY(1,1) PRIMARY KEY, 
        NOMBRE VARCHAR(20) NOT NULL,
        APELLIDOS VARCHAR(20),
        FECHA_NACIMIENTO DATE,
        CELULAR VARCHAR(10),
        DIRECCION VARCHAR(50),
        CIUDAD VARCHAR(20),
        ESTADO VARCHAR(20)
        )
        ELSE PRINT('TABLA ENTRENADORPOKEMON OK');
    IF OBJECT_ID('MEDALLAS','U') IS NULL CREATE TABLE MEDALLAS(
        ID_MEDALLA INT IDENTITY PRIMARY KEY,
        NOMBRE VARCHAR(20) NOT NULL
        )
    IF OBJECT_ID ('TIPOS_POKEMON','U') 
        IS NULL CREATE TABLE TIPOS_POKEMON(
        NO_TIPO INT IDENTITY PRIMARY KEY,  
        NOMBRE_TIPO VARCHAR(20) UNIQUE NOT NULL)
        ELSE PRINT('TABLA TIPOS_POKEMON OK')
    IF OBJECT_ID('GIMNASIO_POKEMON','U') 
        IS NULL CREATE TABLE GIMNASIO_POKEMON(
        CLAVE_GYM INT IDENTITY PRIMARY KEY, 
        NOMBRE_GYM VARCHAR(20), 
        NO_TIPO INT FOREIGN KEY REFERENCES TIPOS_POKEMON(NO_TIPO),
        DIRECCION VARCHAR(20) , 
        CIUDAD VARCHAR(20) , 
        ESTADO VARCHAR(20) NOT NULL, 
        TELEFONO VARCHAR(10)  ,
        MEDALLA_QUE_DA INT FOREIGN KEY REFERENCES MEDALLAS(ID_MEDALLA)
        )
    if OBJECT_ID('LIDER_GYM','U') 
        IS NULL CREATE TABLE LIDER_GYM(
        CLAVE_LIDER INT IDENTITY(1,1) PRIMARY KEY,
        NOMBRE VARCHAR(20) NOT NULL , 
        APELLIDOS VARCHAR(20) NOT NULL, 
        DIRECCION VARCHAR(50), 
        CIUDAD VARCHAR(50), 
        ESTADO VARCHAR(50) ,
        FECHA_NACIMIENTO DATE ,
        SUELDO INT ,
        GYM INT UNIQUE NOT NULL FOREIGN KEY  REFERENCES GIMNASIO_POKEMON(CLAVE_GYM))
        ELSE PRINT('TABLA LIDER_GYM OK')
    if OBJECT_ID('TODOS_LOS_ESTADOS','U') IS NULL CREATE TABLE TODOS_LOS_ESTADOS(
        ID_EVOLUCION INT IDENTITY PRIMARY KEY,
        NOMBRE_ESTADO VARCHAR (20)
        ,
        PESO FLOAT DEFAULT 0,
        ALTURA FLOAT DEFAULT 0

        )

    IF OBJECT_ID ('POKEMON','U') 
        IS NULL CREATE TABLE POKEMON(
        ID_POKEMON_DUEÃ‘O_ INT IDENTITY PRIMARY KEY,
        ID_POKEMON INT FOREIGN KEY REFERENCES TODOS_LOS_ESTADOS(ID_EVOLUCION),
        PREEVOLUCION INT DEFAULT 1 FOREIGN KEY REFERENCES TODOS_LOS_ESTADOS(ID_EVOLUCION) ,
        POSEVOLUCION INT DEFAULT 1 FOREIGN KEY REFERENCES TODOS_LOS_ESTADOS(ID_EVOLUCION),
        CLAVE_ENTRENADOR INT DEFAULT NULL FOREIGN KEY (CLAVE_ENTRENADOR) REFERENCES ENTRENADORPOKEMON(CLAVE) ,
        CLAVE_LIDER INT DEFAULT NULL FOREIGN KEY REFERENCES LIDER_GYM(CLAVE_LIDER),
        ) 
        ELSE PRINT('TABLA POKEMON OK')


    IF OBJECT_ID ('POKEMON_TIPO','U') 
        IS NULL CREATE TABLE POKEMON_TIPO(
        ID_POKEMON INT , 
        NO_TIPO INT, 
        FOREIGN KEY (ID_POKEMON) REFERENCES TODOS_LOS_ESTADOS(ID_EVOLUCION),
        FOREIGN KEY (NO_TIPO) REFERENCES TIPOS_POKEMON(NO_TIPO))
        ELSE PRINT('TABLA POKEMON_TIPO OK')


    IF OBJECT_ID ('TIPO_BATALLA','U') IS NULL CREATE TABLE TIPO_BATALLA(
        CLAVE_TIPO_BATALLA INT IDENTITY PRIMARY KEY, TIPO_BATALLA_NOMBRE VARCHAR(20))

    IF OBJECT_ID('BATALLA','U') IS NULL CREATE TABLE BATALLA(
        CLAVE_BATALLA INT IDENTITY PRIMARY KEY,
        CLAVE_ENTRENADOR INT FOREIGN KEY REFERENCES ENTRENADORPOKEMON(CLAVE) NOT NULL,
        CLAVE_LIDER INT FOREIGN KEY REFERENCES LIDER_GYM(CLAVE_LIDER) NOT NULL,
        ESTATUS VARCHAR(20) DEFAULT 'SIN DEFINIR',
        ID_BATALLA INT FOREIGN KEY REFERENCES TIPO_BATALLA(CLAVE_TIPO_BATALLA),
        ID_MEDALLA INT FOREIGN KEY REFERENCES MEDALLAS(ID_MEDALLA) 
    );
    GO
    Select NAME from sysobjects where type='U' 
GO

--SI EXITE ALGUN OBJETO DE TIPO STORE PROCEDURE ESTE LO BORRARA O TRIGGER O VIEW
--ELIMINACION DE PROCEDURE
    IF EXISTS (SELECT * FROM sysobjects WHERE (NAME='ADD_BATALLA')) 
    BEGIN
    drop PROCEDURE ADD_BATALLA end

    IF EXISTS (SELECT * FROM sysobjects WHERE (NAME='INS_ENTRENADOR')) 
    BEGIN
    drop PROCEDURE INSERTAR_ENTRENADOR end

    IF EXISTS (SELECT * FROM sysobjects WHERE (NAME='ADD_BATALLA_TIPO')) 
    BEGIN
    drop PROCEDURE ADD_BATALLA_TIPO end

    IF EXISTS (SELECT * FROM sysobjects WHERE (NAME='INSERTAR_T')) 
    BEGIN
    drop PROCEDURE INSERTAR_T end

    IF EXISTS (SELECT * FROM sysobjects WHERE (NAME='INS_GYM')) 
    BEGIN
    drop PROCEDURE INS_GYM end

    IF EXISTS (SELECT * FROM sysobjects WHERE (NAME='INS_LIDER')) 
    BEGIN
    drop PROCEDURE INS_LIDER end

    IF EXISTS (SELECT * FROM sysobjects WHERE (NAME='ADD_EVOLUCION')) 
    BEGIN
    drop PROCEDURE ADD_EVOLUCION end

    IF EXISTS (SELECT * FROM sysobjects WHERE (NAME='INS_POKEMON_LIDER')) 
    BEGIN
    drop PROCEDURE INS_POKEMON_LIDER end
    
    IF EXISTS (SELECT * FROM sysobjects WHERE (NAME='INS_POKEMON_ENTRENADOR')) 
    BEGIN
    drop PROCEDURE INS_POKEMON_ENTRENADOR end
    
    IF EXISTS (SELECT * FROM sysobjects WHERE (NAME='REGISTRAR_TIPO')) 
    BEGIN
    drop PROCEDURE REGISTRAR_TIPO end
    go
    IF EXISTS (SELECT * FROM sysobjects WHERE (NAME='AGREGAR_MEDALLA')) 
    BEGIN
        drop PROCEDURE AGREGAR_MEDALLA_ end
    IF EXISTS (SELECT * FROM sysobjects WHERE (NAME='QUIEN_VA_A_LA_LIGA')) 
    BEGIN
        drop PROCEDURE QUIEN_VA_A_LA_LIGA_ end
    IF EXISTS (SELECT * FROM sysobjects WHERE (NAME='VER_LOS_POKEMONES')) 
    BEGIN
        drop PROCEDURE VER_LOS_POKEMONES end
    


GO
--ELIMINACION DE TRIGGERS
    IF EXISTS (SELECT * FROM SYSOBJECTS WHERE (NAME='VERIFICAR_LIMITE'))
    BEGIN DROP TRIGGER VERIFICAR_LIMITE END
    IF EXISTS (SELECT * FROM SYSOBJECTS WHERE (NAME='VERIFICAR_NOMBRE'))
    BEGIN DROP TRIGGER VERIFICAR_NOMBRE END
    IF EXISTS (SELECT * FROM SYSOBJECTS WHERE (NAME='VERIFICAR_NOMBRE_L'))
    BEGIN DROP TRIGGER VERIFICAR_NOMBRE_L END

GO
--ELIMINACION DE VIEWS 
    IF EXISTS (SELECT * FROM SYSOBJECTS WHERE (NAME='LISTADO1'))
    BEGIN DROP VIEW LISTADO1 END
    IF EXISTS (SELECT * FROM SYSOBJECTS WHERE (NAME='LISTADO2'))
    BEGIN DROP VIEW LISTADO2 END
    IF EXISTS (SELECT * FROM SYSOBJECTS WHERE (NAME='CANTIDAD_POKEMONES'))
    BEGIN DROP VIEW CANTIDAD_POKEMONES END
    IF EXISTS (SELECT * FROM SYSOBJECTS WHERE (NAME='LISTA'))
    BEGIN DROP VIEW LISTA END
    IF EXISTS (SELECT * FROM SYSOBJECTS WHERE (NAME='CANTIDAD_MEDALLAS_GANADAS'))
    BEGIN DROP VIEW CANTIDAD_MEDALLAS_GANADAS END

GO

--CREACION DE PROCEDURE
    CREATE PROCEDURE ADD_BATALLA(@CLAVE_ENTRENADOR INT, @CLAVE_LIDER INT, @ESTATUS VARCHAR(20), @TIPO_BATALLA INT,@MEDALLA INT)
    AS 
    BEGIN 
     INSERT INTO BATALLA VALUES(@CLAVE_ENTRENADOR,@CLAVE_LIDER,@ESTATUS,@TIPO_BATALLA,@MEDALLA)
    
    END;
    GO
    CREATE PROCEDURE INSERTAR_ENTRENADOR(@NOMBRE VARCHAR(20),
    @APELLIDOS VARCHAR(20),
    @FECHA_NACIEMIENTO DATE, @CELULAR VARCHAR(10), 
    @DIRECCION VARCHAR(50), @CIUDAD VARCHAR(20), @ESTADO VARCHAR(20))
    AS 
    BEGIN
        INSERT INTO ENTRENADORPOKEMON VALUES(@NOMBRE,@APELLIDOS,@FECHA_NACIEMIENTO,@CELULAR,@DIRECCION,@CIUDAD,@ESTADO) 
        IF EXISTS(SELECT NOMBRE FROM ENTRENADORPOKEMON WHERE NOMBRE=@NOMBRE) PRINT('DONE')
    END;
    GO
    CREATE PROCEDURE INSERTAR_T(@NOMBRE VARCHAR(20))
    AS 
    BEGIN
        INSERT INTO TIPOS_POKEMON VALUES(@NOMBRE) 
        IF EXISTS(SELECT NOMBRE_TIPO FROM TIPOS_POKEMON WHERE NOMBRE_TIPO=@NOMBRE) PRINT('DONE')
    END;
    GO
    CREATE PROCEDURE INS_GYM(@NOMBRE VARCHAR(20),@TIPO INT,@DIRECCION VARCHAR(20), @CIUDAD VARCHAR(20), 
    @ESTADO VARCHAR(20), @TELEFONO VARCHAR(10),@MEDALLA INT)
    AS
    BEGIN
    INSERT INTO GIMNASIO_POKEMON VALUES (@NOMBRE,@TIPO,@DIRECCION,@CIUDAD,@ESTADO,@TELEFONO,@MEDALLA)
    END;
    GO
    CREATE PROCEDURE INS_LIDER(@NOMBRE VARCHAR(20) ,@APELLIDOS VARCHAR(20), @DIRECCION VARCHAR(50) , 
    @CIUDAD VARCHAR(50), @ESTADO VARCHAR(50), 
    @FECHA_NACIMIENTO DATE, @SUELDO INT, @GYM INT )
    AS 
    BEGIN
    INSERT INTO LIDER_GYM VALUES(@NOMBRE,@APELLIDOS,@DIRECCION,@CIUDAD,@ESTADO,@FECHA_NACIMIENTO,@SUELDO,@GYM)
    END;
    GO
    CREATE PROCEDURE ADD_EVOLUCION(@NOMBRE_ETAPA VARCHAR(20),@ALTURA FLOAT,@PESO FLOAT)
    AS 
    BEGIN
        INSERT INTO TODOS_LOS_ESTADOS VALUES (@NOMBRE_ETAPA,@PESO,@ALTURA)
    END;
    GO
    CREATE PROCEDURE INS_POKEMON_LIDER(@ID INT,@PREEVOLUCION INT,@POSEVOLUCION INT,@CLAVE_LIDER INT)
    AS 
    BEGIN
    
        INSERT INTO POKEMON (ID_POKEMON,PREEVOLUCION,POSEVOLUCION,CLAVE_LIDER)VALUES (@ID,@PREEVOLUCION,@POSEVOLUCION,@CLAVE_LIDER)
    END
    GO
    CREATE PROCEDURE INS_POKEMON_ENTRENADOR(@ID INT,@PREEVOLUCION INT,@POSEVOLUCION INT,@CLAVE_ENTRENADOR INT)
    AS 
    BEGIN
        
        INSERT INTO POKEMON (ID_POKEMON,PREEVOLUCION,POSEVOLUCION,CLAVE_ENTRENADOR) VALUES (@ID,@PREEVOLUCION,@POSEVOLUCION,
        @CLAVE_ENTRENADOR)
           
    END

    ;
    GO
    CREATE PROCEDURE REGISTRAR_TIPO(@POKEMON INT,@TIPO INT)
    AS
    BEGIN
    INSERT INTO POKEMON_TIPO VALUES(@POKEMON,@TIPO)
    END;
    GO
    CREATE PROCEDURE AGREGAR_MEDALLA_(@NOMBRE VARCHAR(20))
    AS
    BEGIN
    INSERT INTO MEDALLAS VALUES (@NOMBRE)
    END;
    GO
    CREATE PROCEDURE ADD_BATALLA_TIPO(@NOMBRE VARCHAR(20))
    AS
    BEGIN
    INSERT INTO TIPO_BATALLA VALUES (@NOMBRE)
    END;
    GO
    CREATE PROCEDURE VER_LOS_POKEMONES(@CLAVE INT) AS BEGIN
    SELECT T.NOMBRE_ESTADO  FROM TODOS_LOS_ESTADOS AS T,ENTRENADORPOKEMON AS E,POKEMON AS P 
    WHERE T.ID_EVOLUCION=P.ID_POKEMON AND E.CLAVE=P.CLAVE_ENTRENADOR  AND E.CLAVE=@CLAVE
    END
    GO
    CREATE PROCEDURE QUIEN_VA_A_LA_LIGA
    AS 
    BEGIN
    SELECT C.CLAVE_ENTRENADOR,E.NOMBRE,E.APELLIDOS,E.CIUDAD FROM ENTRENADORPOKEMON AS E, CANTIDAD_MEDALLAS_GANADAS AS 
    C, CANTIDAD_POKEMONES AS P 
    WHERE C.BATALLAS_GANADAS>6 AND P.NUMERO_POKEMONES>6 AND E.CLAVE=C.CLAVE_ENTRENADOR AND P.CLAVE_ENTRENADOR=E.CLAVE
    END;
    GO

GO
--CREACION DE VISTAS
    CREATE VIEW LISTA AS 
    SELECT * FROM POKEMON
    GO
    CREATE VIEW LISTADO1
    AS 
    SELECT TOP 1 * FROM LISTA WHERE CLAVE_ENTRENADOR IS NULL ORDER BY ID_POKEMON_DUEÃ‘O_ DESC 
    GO
    CREATE VIEW LISTADO2
    AS 
    SELECT TOP 1 * FROM LISTA WHERE CLAVE_ENTRENADOR IS NOT NULL ORDER BY ID_POKEMON_DUEÃ‘O_ DESC ;

    GO
    SELECT TOP 1 * FROM LISTADO2
    GO
    CREATE VIEW CANTIDAD_POKEMONES 
    AS
    SELECT POKEMON.CLAVE_ENTRENADOR, NUMERO_POKEMONES=SUM(1) FROM POKEMON  WHERE POKEMON.CLAVE_ENTRENADOR IS NOT NULL 
    GROUP BY POKEMON.CLAVE_ENTRENADOR
    GO 
    CREATE VIEW CANTIDAD_MEDALLAS_GANADAS AS
    SELECT B.CLAVE_ENTRENADOR, BATALLAS_GANADAS=SUM(1) FROM BATALLA AS B  WHERE B.ESTATUS='GANADA' GROUP BY B.CLAVE_ENTRENADOR
    GO
    CREATE VIEW CANTIDAD_TIPOS AS
        SELECT ID_POKEMON, CANTIDAD_TIPOS_=SUM (1) FROM POKEMON_TIPO GROUP BY ID_POKEMON
    GO



--CREACION DE TRIGEERS
    CREATE TRIGGER VERIFICAR_LIMITE ON POKEMON FOR INSERT AS

    DECLARE @NUM INT, @ID INT

    SET @NUM = (SELECT COUNT(P.CLAVE_LIDER) FROM POKEMON AS P, LISTADO1 AS L WHERE P.CLAVE_LIDER=L.CLAVE_LIDER)
    SET @ID = (SELECT L.ID_POKEMON_DUEÃ‘O_ FROM LISTADO1 AS L)

    IF (@NUM >6) 
   
    BEGIN   
        PRINT('LIMITE ALCANZADO')
        DELETE FROM POKEMON WHERE ID_POKEMON_DUEÃ‘O_= @ID; 

   
    END
    GO

    CREATE TRIGGER VERIFICAR_NOMBRE ON POKEMON FOR INSERT 
    AS
    DECLARE @NUM INT, @NOMBRE INT, @ID1 INT,@ID INT
    SET @ID1 = (SELECT L.CLAVE_ENTRENADOR FROM  LISTADO2 AS L)
    SET @NOMBRE = (SELECT ID_POKEMON FROM  LISTADO2 )
    SET @NUM = (SELECT COUNT(ID_POKEMON) FROM POKEMON WHERE CLAVE_ENTRENADOR=@ID1 AND ID_POKEMON=@NOMBRE)
    SET @ID = (SELECT L.ID_POKEMON_DUEÃ‘O_ FROM LISTADO2 AS L)
    PRINT(@ID1)
    PRINT(@NUM)
    IF @NUM>1
    BEGIN
    
        DELETE FROM POKEMON WHERE ID_POKEMON_DUEÃ‘O_= @ID
        PRINT 'SE ELIMINO EL POKEMON ANTERIOR YA QUE YA TIENE UNO CON EL MISMO NOMBRE'
    END
    ELSE 
    BEGIN
        PRINT 'DONE'
    END
    
    GO
    CREATE TRIGGER VERIFICAR_NOMBRE_L ON POKEMON FOR INSERT 
    AS
    DECLARE @NUM INT, @NOMBRE INT, @ID1 INT,@ID INT
    SET @ID1 = (SELECT L.CLAVE_ENTRENADOR FROM  LISTADO1 AS L)
    SET @NOMBRE = (SELECT ID_POKEMON FROM  LISTADO1 )
    SET @NUM = (SELECT COUNT(ID_POKEMON) FROM POKEMON WHERE CLAVE_ENTRENADOR=@ID1 AND ID_POKEMON=@NOMBRE)
    SET @ID = (SELECT L.ID_POKEMON_DUEÃ‘O_ FROM LISTADO1 AS L)
    PRINT(@ID1)
    PRINT(@NUM)

    IF @NUM>1
    BEGIN
        DELETE FROM POKEMON WHERE ID_POKEMON_DUEÃ‘O_= @ID
        PRINT 'SE ELIMINO EL POKEMON ANTERIOR YA QUE YA TIENE UNO CON EL MISMO NOMBRE'
    END
    ELSE 
    BEGIN
        PRINT 'DONE'
    END

    GO

--INSERTANDO ENTRENADORES
    EXEC INSERTAR_ENTRENADOR 'VALERIA','TORRES ','03/12/1999','21701844','3A PRIVADA','MONTERREY','NUEVO LEON'
    EXEC INSERTAR_ENTRENADOR 'YASMINA','CABRAL ','16/01/2001','21701844','4A PRIVADA','GUADALUPE','NUEVO LEON'
    EXEC INSERTAR_ENTRENADOR 'XERO','MENCHACA ','14/10/2005','21701844','5A PRIVADA','MONTERREY','NUEVO LEON'
    EXEC INSERTAR_ENTRENADOR 'NARCISO','CHARLES ','06/09/1999','21701844','6A PRIVADA','CIENEGA DE FLORES','NUEVO LEON'
    EXEC INSERTAR_ENTRENADOR 'KAREN','IGNACIO ','15/05/1998','21701844','7A PRIVADA','GARCIA','NUEVO LEON'
--INSERTANDO MEDALLAS
    EXEC AGREGAR_MEDALLA_ 'ROCA'
    EXEC AGREGAR_MEDALLA_ 'AGUA'
    EXEC AGREGAR_MEDALLA_ 'FANTASMA'
    EXEC AGREGAR_MEDALLA_ 'ELECTRICA'
--INSERTANDO TIPOS
    EXEC INSERTAR_T 'ROCA'--1
    EXEC INSERTAR_T 'FANTASMA'--2
    EXEC INSERTAR_T 'ELECTRICA'--3
    EXEC INSERTAR_T 'AGUA'--4
    EXEC INSERTAR_T 'PSIQUICO--5'
    EXEC INSERTAR_T 'HIELO'--6
    EXEC INSERTAR_T 'VOLADOR'--7
--INSERTANDO GYMS
    EXEC INS_GYM 'GIMNASIO POKEMON DE CIUDAD PLATEADA',1,'AV LINCOLN','CIUDAD PLATEADA','KANTO','8111062935',1
    EXEC INS_GYM 'GIMNASIO POKEMON DE CIUDAD CELESTE',4,'AV RUIZ CORTINEZ','CIUDAD CELESTE','KANTO','1062935',2
    EXEC INS_GYM 'GIMNASIO POKEMON DE CIUDAD CARMIN',3,'AV GONZALITOS','CIUDAD CARMIN','KANTO','1062935',4
    EXEC INS_GYM 'GIMNASIO POKEMON DE CIUDAD IRIS',2,'AV GONZALITOS','CIUDAD CARMIN','JOHTO','1062935',3
--INSERTANDO LIDERES
    EXEC INS_LIDER 'BROCK','RODRIGUEZ','AV POKEMON 1','CIUDAD PLATEADA','KANTO','03/12/1970',2000,1
    EXEC INS_LIDER 'MISTY','CELESTE','AV POKEMON 2','CIUDAD CELESTE','KANTO','03/12/1970',2500,2
    EXEC INS_LIDER 'LT','STURGE','AV POKEMON 3','CIUDAD CARMIN','KANTO','03/12/1970',2800,3
    EXEC INS_LIDER 'MORTI','RODRIGUEZ','AV POKEMON 4','CIUDAD IRIS','JOHTO','03/12/1970',2800,4


--INSERTANDO EVOLUCIONES
    EXEC ADD_EVOLUCION 'DESCONOCIDO',0,0--1
    EXEC ADD_EVOLUCION 'NO TIENE',0,0--2----
    EXEC ADD_EVOLUCION 'PICHU',.4,6.0--ELECTRICO,3---
    EXEC ADD_EVOLUCION 'PIKACHU',.4,6.0--ELECTRICO4---
    EXEC ADD_EVOLUCION 'RAICHU',.8,30--ELECTRICO5---
    EXEC ADD_EVOLUCION 'SQUIRTLE',.5,9.0--AGUA6
    EXEC ADD_EVOLUCION 'WARTORTLE',1.0,22.5--AG7UA
    EXEC ADD_EVOLUCION 'BLASTOISE',1.6,85.5--AGU8A
    EXEC ADD_EVOLUCION 'MAGIKARP',.9,10--AGUA9
    EXEC ADD_EVOLUCION 'GYARDOS',6.5,235--AGUA10 VOLADOR
    EXEC ADD_EVOLUCION 'LAPRAS',2.5,220--FA11
--INSERTANDO POKEMONES
    EXEC INS_POKEMON_ENTRENADOR 7,6,8,1--AGUA
    EXEC INS_POKEMON_ENTRENADOR 3,2,4,1--ELECTRICO
    EXEC INS_POKEMON_ENTRENADOR 4,3,5,1--ELECTRICO
    EXEC INS_POKEMON_ENTRENADOR 10,9,2,1
    EXEC INS_POKEMON_ENTRENADOR 5,4,2,2--ELECTRICO
    EXEC INS_POKEMON_ENTRENADOR 4,3,5,2--ELECTRICO
    EXEC INS_POKEMON_ENTRENADOR 6,2,7,2--ELECTRICO
    EXEC INS_POKEMON_ENTRENADOR 9,2,10,2
    EXEC INS_POKEMON_ENTRENADOR 11,2,2,2--AGUA Y HIELO
    EXEC INS_POKEMON_ENTRENADOR 11,2,2,3
    EXEC INS_POKEMON_ENTRENADOR 9,2,10,3--AGUA
    EXEC INS_POKEMON_ENTRENADOR 10,9 , 2 ,4--AGUA, VOLADOR
    EXEC INS_POKEMON_ENTRENADOR 11,2 , 2 ,4--AGUA, VOLADOR
    EXEC INS_POKEMON_ENTRENADOR 5,4 , 2 ,4--AGUA, VOLADOR
    EXEC INS_POKEMON_ENTRENADOR 4,3 , 5 ,4--AGUA, VOLADOR
    EXEC INS_POKEMON_ENTRENADOR 3,2 , 4 ,4--AGUA, VOLADOR
    EXEC INS_POKEMON_ENTRENADOR 9,2 ,10 ,4--AGUA, VOLADOR
    EXEC INS_POKEMON_ENTRENADOR 8,7 ,2 ,4--AGUA, VOLADOR
    EXEC INS_POKEMON_ENTRENADOR 4,3 , 5 ,5
    EXEC INS_POKEMON_ENTRENADOR 8,7,2,5--AGUA
    EXEC INS_POKEMON_ENTRENADOR 8,7,2,5--ESTE REGISTRO NO SERA INSERTADO YA QUE HAY UN TRIGGER MONITOREANDO QUE NO HAYA 
    --DOS POKEMON IGUALES CON EL MISMO ENTRENADOR

--INSERTANDO POKEMONES
    EXEC INS_POKEMON_LIDER 3,2,4,1--ELECTRICO
    EXEC INS_POKEMON_LIDER 6,2,7,1
    EXEC INS_POKEMON_LIDER 10,9,2,1
    EXEC INS_POKEMON_LIDER 9,2,10,2
    EXEC INS_POKEMON_LIDER 10,9,2,2
    EXEC INS_POKEMON_LIDER 10,9,2,3
    EXEC INS_POKEMON_LIDER 10,9,2,4
    EXEC INS_POKEMON_LIDER 4,3,5,4
    EXEC INS_POKEMON_LIDER 6,2,8,4
    EXEC INS_POKEMON_LIDER 9,2,10,4
    EXEC INS_POKEMON_LIDER 3,2,4,4
    EXEC INS_POKEMON_LIDER 4,3,5,4
    EXEC INS_POKEMON_LIDER 11,2,2,4--este registro ya no se inserta ya que ha alcanzado el limite 
    --se monitorea con el trigger VERIFICAR_LIMITE
--INSERTANTO LOS TIPOS DE POKEMON
    EXEC REGISTRAR_TIPO 3,3
    EXEC REGISTRAR_TIPO 4,3
    EXEC REGISTRAR_TIPO 5,3
    EXEC REGISTRAR_TIPO 6,4
    EXEC REGISTRAR_TIPO 7,4
    EXEC REGISTRAR_TIPO 8,4
    EXEC REGISTRAR_TIPO 9,4
    EXEC REGISTRAR_TIPO 10,4
    EXEC REGISTRAR_TIPO 10,7
    EXEC REGISTRAR_TIPO 11,2

--INSERTANDO LOS TIPOS DE BATLLAS 
    EXEC ADD_BATALLA_TIPO 'DOS VS UNO'    
    EXEC ADD_BATALLA_TIPO 'UNO VS UNO'
    EXEC ADD_BATALLA_TIPO 'DOS VS DOS'

--INSERTANDO LAS BATALLAS
    EXEC ADD_BATALLA  1,1,'PERDIDA',1,1
    EXEC ADD_BATALLA  1,1, 'GANADA',1,1
    EXEC ADD_BATALLA  1,2, 'GANADA',1,4
    EXEC ADD_BATALLA  2,2,'PERDIDA',2,4
    EXEC ADD_BATALLA  2,1, 'GANADA',1,1
    EXEC ADD_BATALLA  1,2, 'GANADA',1,4
    EXEC ADD_BATALLA  1,1,'PERDIDA',1,1
    EXEC ADD_BATALLA  3,2, 'GANADA',3,4
    EXEC ADD_BATALLA  4,1, 'GANADA',1,1
    EXEC ADD_BATALLA  4,2, 'GANADA',2,4
    EXEC ADD_BATALLA  4,1, 'GANADA',2,1
    EXEC ADD_BATALLA  4,1, 'GANADA',1,1
    EXEC ADD_BATALLA  4,1, 'GANADA',2,1
    EXEC ADD_BATALLA  4,2, 'GANADA',3,4
    EXEC ADD_BATALLA  4,1, 'GANADA',3,1


GO




--10 CONSULTAS

    --1
    SELECT * FROM POKEMON
    --SELECCIONA TODOS LOS POKEMONES REGISTRADOS HASTA EL MOMENTO
    --2
    SELECT * FROM POKEMON WHERE CLAVE_ENTRENADOR=2
    --SEECCIONA TODOS LOS POKEMONES JUNTO CON TODOS SUS DATOS DEL ENTRENADOR 2
    --3
    SELECT P.* FROM POKEMON AS P,ENTRENADORPOKEMON AS E WHERE E.NOMBRE='XERO' AND E.CLAVE=P.CLAVE_ENTRENADOR
    --SELECCIONA LOS POKEMONES DEL ENTRENADOR DE NOMBRE 'XERO'
    --4
    SELECT * FROM ENTRENADORPOKEMON --MUESTRA EN CONSOLA TODOS LOS ENTRENADORES POKEMONES JUNTO CON SUS DATOS
    --5
    SELECT * FROM GIMNASIO_POKEMON --MUESTRA EN CONSOLA TODOS LOS GIMNASIOS
    --6
    SELECT* FROM LIDER_GYM;--MUESTRA EN CONSOLA TODOS LOS LIDERES
    --7
    SELECT CANTIDAD_TOTAL_POKEMONES=COUNT(*) FROM POKEMON --MUESTRA EN PANTALLA LA CANTIDAD DE POKEMONES REGISTRADOS
    --8 
    SELECT * FROM CANTIDAD_POKEMONES;
    --MUESTRA EN CONSOLA LA CANTIDAD DE POKEMONES QUE TIENE CADA ENTRENADOR EXTRAIDO DE LA VISTA CANTIDAD_POKEMONES
    --9
    SELECT T.NOMBRE_ESTADO FROM TODOS_LOS_ESTADOS AS T WHERE T.PESO > 30;-- MUESTRA LOS POKEMONES QUE PESAN MAS DE 30 KILOS
    --10
    SELECT T.PESO FROM TODOS_LOS_ESTADOS AS T WHERE T.NOMBRE_ESTADO='GYARDOS'--MUESTRA EL PESO DE EL POKEMON GYARDOS 

--10 UPDATE
    --1
    UPDATE TODOS_LOS_ESTADOS  SET PESO = NULL 
    WHERE ID_EVOLUCION = 2--CAMBIA EL PESO DEL ESTADO 2 A NULL
    --2
    UPDATE TODOS_LOS_ESTADOS SET PESO = NULL 
    WHERE ID_EVOLUCION = 1 --CAMBIA EL PESO DEL ESTADO 1 A NULL
    --3
    UPDATE TODOS_LOS_ESTADOS  SET ALTURA = NULL 
    WHERE ID_EVOLUCION = 2--CAMBIA LA ALTURA DEL ESTADO 2 A NULL
    --4
    UPDATE TODOS_LOS_ESTADOS SET ALTURA = NULL 
    WHERE ID_EVOLUCION = 1--CAMBIA LA ALTURA DEL ESTADO 1 A NULL
    --5
    UPDATE ENTRENADORPOKEMON    SET APELLIDOS= 'SMITH'
    WHERE CLAVE=1 --CAMBIA EL APELLIDO DEL ENTRENADOR CON LA CLAVE 1
    --6
    UPDATE ENTRENADORPOKEMON    SET CELULAR= '018001234'
    WHERE CLAVE=2 --CAMBIA EL CELULAR DEL ENTRENADOR CON LA CLAVE 2
    --7
    UPDATE LIDER_GYM SET FECHA_NACIMIENTO= '04/07/2000'
    WHERE CLAVE_LIDER=3 --CAMBIA LA FECHA DE NACIEMIENTO DEL LIDER CON LA CLAVE 3
    --8
    UPDATE GIMNASIO_POKEMON SET TELEFONO= '0180012345'
    WHERE CLAVE_GYM=3 --CAMBIA EL TELEFONO DEL GIMNASIO CON LA CLAVE 3
    --9
    UPDATE GIMNASIO_POKEMON SET DIRECCION= 'AV LAS ROCAS'
    WHERE CLAVE_GYM=2 --CAMBIA LA DIRECCION DEL GIMNASIO CON CLAVE 2
    --10
    UPDATE BATALLA SET ESTATUS= 'GANADA' WHERE ID_BATALLA=2 --CAMBIA EL ESTATUS DE LA BATALLA CON CLAVE 2
--UNO DE LOS ENTRENADORES MURIO ACTUALIZACION CORRESPONDIENTE(ES EL POKEMON 4 DEL ENTRENADOR 5)
   

    DELETE FROM POKEMON WHERE CLAVE_ENTRENADOR=5 AND ID_POKEMON=4
    --DESCANSE EN PAZ
    --VERIFICAMOS
    SELECT * FROM POKEMON WHERE CLAVE_ENTRENADOR=5
--TODOS LOS POKEMON QUE PERTENEN A MAS DE UN TIPO
    SELECT DISTINCT T.NOMBRE_ESTADO,CT.CANTIDAD_TIPOS_ 
    FROM CANTIDAD_TIPOS AS CT, POKEMON AS P,  TODOS_LOS_ESTADOS AS T
    WHERE CT.CANTIDAD_TIPOS_ > 1 AND CT.ID_POKEMON=T.ID_EVOLUCION AND T.ID_EVOLUCION=P.ID_POKEMON 
--ejecutando porcedures para ver los pokemones de un entrenador pasando el parametro de
--su numero y los clasificados para el torneo
EXEC VER_LOS_POKEMONES 1
EXEC QUIEN_VA_A_LA_LIGA


